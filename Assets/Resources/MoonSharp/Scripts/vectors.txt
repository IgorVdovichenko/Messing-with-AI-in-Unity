local mt = {} --metatable

local new = function(x, y, z)
                local v = {x = x, y = y, z = z}
                setmetatable(v, mt)
                return v
             end  
                   
local len = function(v); return (v.x * v.x + v.y * v.y + v.z * v.z) ^ 0.5; end
local slen = function(v); return v.x * v.x + v.y * v.y + v.z * v.z; end
local add = function(v1, v2); return new((v1.x + v2.x), (v1.y + v2.y), (v1.z + v2.z)); end

local mul = function(a, b)
                if(type(a) == "table" and type(b) == "number") then
                    return new(a.x * b, a.y * b, a.z * b) end
                if(type(a) == "number" and type(b) == "table") then
                    return new(b.x * a, b.y * a, b.z * a) end
                end
                
local nor = function(v); return t.mul(v, 1/t.len(v)); end                     
local sub = function(a, b); return t.add(a, t.mul(b, -1)); end                         
local toString = function(v); return "(" .. v.x .. "," .. v.y .. "," .. v.z .. ")"; end

local up = new(0, 1, 0)
local forward = new(0, 0, 1)
local right = new(1, 0, 0)

local equal = function(a, b)
                return a.x == b.x and a.y == b.y and a.z == b.z
              end

-- set metamethods
mt.__add = add
mt.__sub = sub
mt.__tostring = toString
mt.__mul = mul

t = { 
      new = new,                   
      len = len,  
      slen = slen,   
      add = add,                   
      mul = mul,    
      nor = nor,                    
      sub = sub,   
      toString = toString,
      up = up,
      forward = forward,
      right = right
    }

return t